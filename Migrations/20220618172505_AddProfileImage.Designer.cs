// <auto-generated />
using System;
using Encyclopedia_Of_Laws.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Encyclopedia_Of_Laws.Migrations
{
    [DbContext(typeof(EncyclopediaOfLawsContext))]
    [Migration("20220618172505_AddProfileImage")]
    partial class AddProfileImage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "security");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Bookكتابقسمباب", b =>
                {
                    b.Property<int>("IdB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_B")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdS")
                        .HasColumnType("int")
                        .HasColumnName("ID_S");

                    b.Property<string>("اسمالكتاب")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم الكتاب");

                    b.Property<string>("رقمالكتاب")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("رقم الكتاب");

                    b.HasKey("IdB")
                        .HasName("PK_كتاب(/قسم/باب)");

                    b.HasIndex("IdS");

                    b.ToTable("book[كتاب(/قسم/باب)]");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter1", b =>
                {
                    b.Property<int>("IdChapter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Chapter")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdP")
                        .HasColumnType("int")
                        .HasColumnName("ID_P");

                    b.Property<string>("اسمالفصل")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم الفصل");

                    b.Property<string>("رقمالفصل")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("رقم الفصل");

                    b.HasKey("IdChapter")
                        .HasName("PK_الفصل1");

                    b.HasIndex("IdP");

                    b.ToTable("Chapter1");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter2", b =>
                {
                    b.Property<int>("IdCh2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Ch2")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdChapter")
                        .HasColumnType("int")
                        .HasColumnName("ID_Chapter");

                    b.Property<string>("اسمالنقطه")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم النقطه");

                    b.HasKey("IdCh2")
                        .HasName("PK_فصل2");

                    b.HasIndex("IdChapter");

                    b.ToTable("Chapter2");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter3", b =>
                {
                    b.Property<int>("IdCh3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Ch3")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCh2")
                        .HasColumnType("int")
                        .HasColumnName("ID_Ch2");

                    b.Property<string>("محتويالنقطه")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("محتوي النقطه");

                    b.HasKey("IdCh3")
                        .HasName("PK_فصل3");

                    b.HasIndex("IdCh2");

                    b.ToTable("Chapter3");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Law", b =>
                {
                    b.Property<int>("IdLaw")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_law")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("اسمالقانون")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم القانون");

                    b.Property<string>("اسممصدره")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم مصدره");

                    b.Property<string>("تاريخاصدارالقانون")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("تاريخ اصدار القانون");

                    b.Property<string>("تاريخالنشر")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("تاريخ النشر");

                    b.Property<string>("جهةالاصدار")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("جهة الاصدار");

                    b.Property<string>("جهةالنشر")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("جهة النشر");

                    b.Property<string>("رقمالوثيقه")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("رقم الوثيقه");

                    b.HasKey("IdLaw")
                        .HasName("PK_القانون");

                    b.ToTable("Law");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.LawyerInfo", b =>
                {
                    b.Property<int>("LawyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JopDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LawyerId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("LawyerInfos");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Partقسمكتابباب", b =>
                {
                    b.Property<int>("IdS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_S")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdLaw")
                        .HasColumnType("int")
                        .HasColumnName("ID_law");

                    b.Property<string>("اسمالقسم")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم القسم");

                    b.Property<string>("رقمالقسم")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("رقم القسم");

                    b.HasKey("IdS")
                        .HasName("PK_قسم(/كتاب/باب)");

                    b.HasIndex("IdLaw");

                    b.ToTable("Part[قسم(/كتاب/باب)]");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AssignedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("AssignedDate");

                    b.Property<string>("LawyerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Lawyer_ID");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime")
                        .HasColumnName("RequestDate");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Request_Status")
                        .HasDefaultValueSql("(N'Pending')");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Subject");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("User_ID");

                    b.HasKey("RequestId");

                    b.HasIndex("LawyerId");

                    b.HasIndex("UserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("Request_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReviewId");

                    b.HasIndex("RequestId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Sectionكتابقسم", b =>
                {
                    b.Property<int>("IdP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_P")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdB")
                        .HasColumnType("int")
                        .HasColumnName("ID_B");

                    b.Property<string>("اسمالباب")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("اسم الباب");

                    b.Property<string>("رقمالباب")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("رقم الباب");

                    b.HasKey("IdP")
                        .HasName("PK_باب(كتاب/قسم)");

                    b.HasIndex("IdB");

                    b.ToTable("Section(كتاب/قسم)]");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Subjectsمواد", b =>
                {
                    b.Property<int>("IdSubjects")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Subjects")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdB")
                        .HasColumnType("int")
                        .HasColumnName("ID_B");

                    b.Property<int?>("IdCh2")
                        .HasColumnType("int")
                        .HasColumnName("ID_Ch2");

                    b.Property<int?>("IdCh3")
                        .HasColumnType("int")
                        .HasColumnName("ID_Ch3");

                    b.Property<int?>("IdChapter")
                        .HasColumnType("int")
                        .HasColumnName("ID_Chapter");

                    b.Property<int?>("IdLaw")
                        .HasColumnType("int")
                        .HasColumnName("ID_Law");

                    b.Property<int?>("IdP")
                        .HasColumnType("int")
                        .HasColumnName("ID_P");

                    b.Property<int?>("IdSقسم")
                        .HasColumnType("int")
                        .HasColumnName("ID_S(قسم)");

                    b.Property<string>("التعديلالسابقللماده")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("التعديل السابق للماده");

                    b.Property<string>("حالهالماده")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("حاله الماده")
                        .HasDefaultValueSql("(N'مازلت موجوده')");

                    b.Property<string>("رقمالماده")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("رقم الماده");

                    b.Property<string>("سنهالتعديلالسابق")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("سنه التعديل السابق");

                    b.Property<string>("محتوىالماده")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("محتوى الماده");

                    b.HasKey("IdSubjects")
                        .HasName("PK_مواد");

                    b.HasIndex("IdB");

                    b.HasIndex("IdCh2");

                    b.HasIndex("IdCh3");

                    b.HasIndex("IdChapter");

                    b.HasIndex("IdLaw");

                    b.HasIndex("IdP");

                    b.HasIndex("IdSقسم");

                    b.ToTable("Subjects[مواد]");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.UserIssue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("issueID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("issue_Date");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'pending')");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IssueId")
                        .HasName("PK__UserIssu__749E804CF181F235");

                    b.ToTable("UserIssues");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "security");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Bookكتابقسمباب", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Partقسمكتابباب", "IdSNavigation")
                        .WithMany("Bookكتابقسمبابs")
                        .HasForeignKey("IdS")
                        .HasConstraintName("FK_كتاب(/قسم/باب)_قسم(/كتاب/باب)");

                    b.Navigation("IdSNavigation");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter1", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Sectionكتابقسم", "IdPNavigation")
                        .WithMany("Chapter1s")
                        .HasForeignKey("IdP")
                        .HasConstraintName("FK_الفصل1_باب(كتاب/قسم)");

                    b.Navigation("IdPNavigation");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter2", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Chapter1", "IdChapterNavigation")
                        .WithMany("Chapter2s")
                        .HasForeignKey("IdChapter")
                        .HasConstraintName("FK_فصل2_الفصل1");

                    b.Navigation("IdChapterNavigation");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter3", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Chapter2", "IdCh2Navigation")
                        .WithMany("Chapter3s")
                        .HasForeignKey("IdCh2")
                        .HasConstraintName("FK_فصل3_فصل2");

                    b.Navigation("IdCh2Navigation");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.LawyerInfo", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", "User")
                        .WithOne("LawyerInfo")
                        .HasForeignKey("Encyclopedia_Of_Laws.Models.LawyerInfo", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Partقسمكتابباب", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Law", "IdLawNavigation")
                        .WithMany("Partقسمكتاببابs")
                        .HasForeignKey("IdLaw")
                        .HasConstraintName("FK_قسم(/كتاب/باب)_القانون");

                    b.Navigation("IdLawNavigation");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Request", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", "Lawyer")
                        .WithMany("RequestLawyers")
                        .HasForeignKey("LawyerId")
                        .HasConstraintName("FK_Requests_Lawyers")
                        .IsRequired();

                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", "User")
                        .WithMany("RequestUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Requests_users")
                        .IsRequired();

                    b.Navigation("Lawyer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Review", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Sectionكتابقسم", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Bookكتابقسمباب", "IdBNavigation")
                        .WithMany("Sectionكتابقسمs")
                        .HasForeignKey("IdB")
                        .HasConstraintName("FK_باب(كتاب/قسم)_كتاب(/قسم/باب)");

                    b.Navigation("IdBNavigation");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Subjectsمواد", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.Bookكتابقسمباب", "IdBNavigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdB")
                        .HasConstraintName("FK_مواد_كتاب(/قسم/باب)");

                    b.HasOne("Encyclopedia_Of_Laws.Models.Chapter2", "IdCh2Navigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdCh2")
                        .HasConstraintName("FK_مواد_فصل2");

                    b.HasOne("Encyclopedia_Of_Laws.Models.Chapter3", "IdCh3Navigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdCh3")
                        .HasConstraintName("FK_مواد_فصل3");

                    b.HasOne("Encyclopedia_Of_Laws.Models.Chapter1", "IdChapterNavigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdChapter")
                        .HasConstraintName("FK_مواد_الفصل1");

                    b.HasOne("Encyclopedia_Of_Laws.Models.Law", "IdLawNavigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdLaw")
                        .HasConstraintName("FK_مواد_القانون");

                    b.HasOne("Encyclopedia_Of_Laws.Models.Sectionكتابقسم", "IdPNavigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdP")
                        .HasConstraintName("FK_مواد_باب(كتاب/قسم)");

                    b.HasOne("Encyclopedia_Of_Laws.Models.Partقسمكتابباب", "IdSقسمNavigation")
                        .WithMany("Subjectsموادs")
                        .HasForeignKey("IdSقسم")
                        .HasConstraintName("FK_مواد_قسم(/كتاب/باب)");

                    b.Navigation("IdBNavigation");

                    b.Navigation("IdCh2Navigation");

                    b.Navigation("IdCh3Navigation");

                    b.Navigation("IdChapterNavigation");

                    b.Navigation("IdLawNavigation");

                    b.Navigation("IdPNavigation");

                    b.Navigation("IdSقسمNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Encyclopedia_Of_Laws.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.ApplicationUser", b =>
                {
                    b.Navigation("LawyerInfo");

                    b.Navigation("RequestLawyers");

                    b.Navigation("RequestUsers");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Bookكتابقسمباب", b =>
                {
                    b.Navigation("Sectionكتابقسمs");

                    b.Navigation("Subjectsموادs");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter1", b =>
                {
                    b.Navigation("Chapter2s");

                    b.Navigation("Subjectsموادs");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter2", b =>
                {
                    b.Navigation("Chapter3s");

                    b.Navigation("Subjectsموادs");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Chapter3", b =>
                {
                    b.Navigation("Subjectsموادs");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Law", b =>
                {
                    b.Navigation("Partقسمكتاببابs");

                    b.Navigation("Subjectsموادs");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Partقسمكتابباب", b =>
                {
                    b.Navigation("Bookكتابقسمبابs");

                    b.Navigation("Subjectsموادs");
                });

            modelBuilder.Entity("Encyclopedia_Of_Laws.Models.Sectionكتابقسم", b =>
                {
                    b.Navigation("Chapter1s");

                    b.Navigation("Subjectsموادs");
                });
#pragma warning restore 612, 618
        }
    }
}
